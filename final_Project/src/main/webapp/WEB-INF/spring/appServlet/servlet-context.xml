<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/img/product/**" location="/resources/upload/product/" /> 

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.jey.webapp" />
	
	<!-- 데이터베이스 연결 객체 등록 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.OracleDriver"></beans:property>
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></beans:property>
		<beans:property name="username" value="final_project"></beans:property>
		<beans:property name="password" value="final_project"></beans:property>
	</beans:bean>
	
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
	</beans:bean>
	
	<!-- mybatis 연동을 위한 bean 등록 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></beans:property>
		<beans:property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean> 
	
	
	<!-- Multipart File 처리 관련 빈 등록 (form 태그에 enctype="multipart/form-data")-->
	<beans:bean id="multipartResolver"
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- 업로드 파일의 크기 제한 - 10MB -->
	    <!-- <beans:property name="maxUploadSize" value="10485760" /> -->
	    <beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	
	
	<!-- Websocket 빈 등록 -->
	<websocket:handlers allowed-origins="*">
	    <!-- path : 외부에서 Websocket 연결 요청을 받을 URL 주소 -->
	    <!-- handler : Websocket 관련 조작을 위한 Handler 클래스 이름(직접 만들어야 함) -->
	    <websocket:mapping path="/alert" handler="alertHandler" />
	    <websocket:handshake-interceptors>
	        <beans:bean
	            class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"></beans:bean>
	    </websocket:handshake-interceptors>
	</websocket:handlers>
	
	
	 <!-- mail bean -->
	 <beans:bean id = "mailSender" 
	 class="org.springframework.mail.javamail.JavaMailSenderImpl">
	<beans:property name="host" value="smtp.gmail.com" />
	<beans:property name="port" value="587" />
	<beans:property name="username" value="salfit.contact@gmail.com" />
	<beans:property name="password" value="Salfit.Contact@1" />
	<beans:property name="javaMailProperties"> 
		<beans:props>
			<beans:prop key="mail.smtp.auth">true</beans:prop>
	 		<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
	 	</beans:props>
	</beans:property>
	</beans:bean>
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="1082904925061-uort5h8csjfdcshpe89qs881hjdbfhfg.apps.googleusercontent.com" />
		<beans:constructor-arg value="Uh8oirKF7F7Ok1K7_Nrli0S2" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost/google_login" />
	</beans:bean>
	
</beans:beans>
